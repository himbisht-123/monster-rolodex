{"version":3,"sources":["components/Search-box/search-box.component.jsx","components/card/cardcomponent.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handlechange","className","type","onChange","Card","props","alt","src","monster","id","name","email","Cardlist","map","App","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredmonster","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEnB,uBAAOC,UAAU,SACjBC,KAAK,SACLH,YAAaA,EACbI,SAAUH,MCLDI,G,YAAK,SAAAC,GAAK,OACtB,sBAAKJ,UAAU,iBAAf,UACA,qBAAKK,IAAI,UAAUC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,eACtB,6BAAKJ,EAAMG,QAAQE,OACnB,4BAAIL,EAAMG,QAAQG,aCHNC,EAAS,SAACP,GAAD,OAGlB,aADA,CACA,OAAKJ,UAAU,YAAf,SACII,EAAMG,QAAQK,KAAI,SAAAL,GAAO,OAAG,cAAC,EAAD,CAAsBA,QAASA,GAApBA,EAAQC,UCuCxCK,G,wDAxCb,aAAc,IAAD,8BACX,gBAeFd,aAAa,SAACe,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAdpC,EAAKC,MAAM,CACTZ,QAAQ,GACRS,YAAY,KALH,E,gEAWZ,IAAD,OACEI,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OACjEA,EAASC,UACRF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACR,QAAQiB,S,+BAMrC,IAAD,EAC6BC,KAAKN,MAA1BZ,EADR,EACQA,QAAQS,EADhB,EACgBA,YAERU,EAAgBnB,EAAQoB,QAAO,SAAApB,GAAO,OAAEA,EAAQE,KAAKmB,cAAcC,SAASb,EAAYY,kBAE9F,OACE,sBAAK5B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CACAF,YAAY,kBACZC,aAAc0B,KAAK1B,eAEnB,cAAC,EAAD,CAAUQ,QAASmB,W,GAjCPI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6956a001.chunk.js","sourcesContent":["import React from 'react';\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox=({placeholder,handlechange})=>(\r\n\r\n    <input className='search' \r\n    type=\"search\" \r\n    placeholder={placeholder}\r\n    onChange={handlechange}/>\r\n);","import React from 'react';\r\n\r\nimport './card-component.style.css';\r\nexport const Card=props=>(\r\n <div className='card-container'>\r\n <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\r\n <h2>{props.monster.name}</h2>\r\n <p>{props.monster.email}</p>\r\n\r\n </div>\r\n\r\n );\r\n\r\n ","import React from 'react';\r\nimport './card-list.style.css';\r\nimport {Card} from '../card/cardcomponent';\r\n\r\nexport const Cardlist=(props)=>\r\n(\r\n    //console.log(props)\r\n    <div className='card-list'>{\r\n        props.monster.map(monster=>(<Card key={monster.id}monster={monster}/>))}\r\n        </div>\r\n);\r\n","import React, {Component} from 'react'\n//import logo from './logo.svg';\nimport {SearchBox} from './components/Search-box/search-box.component';\nimport {Cardlist} from './components/card-list/card-list.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(){\n    super();\n\n    this.state={\n      monster:[],\n      searchfield:' '\n      \n    };\n  //  this.handlechange=this.handlechange.bind(this);\n  }\n  componentDidMount()\n  {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response=>\n    response.json())\n    .then(users=>this.setState({monster:users}))  \n  }\n  handlechange=(e)=>{\n    this.setState({searchfield:e.target.value});\n  }\n  render()\n  {\n    const{monster,searchfield}=this.state;\n\n    const filteredmonster=monster.filter(monster=>monster.name.toLowerCase().includes(searchfield.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n      placeholder=\"search monsters\"\n      handlechange={this.handlechange}\n      />\n      <Cardlist monster={filteredmonster}/>\n     \n     \n       \n        </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}